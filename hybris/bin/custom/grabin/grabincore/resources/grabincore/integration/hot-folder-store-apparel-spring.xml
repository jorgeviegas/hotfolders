<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/integration
	http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/file 
	http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <bean id="baseDirectoryApparel" class="java.lang.String">
        <constructor-arg value="#{baseDirectory}/${tenantId}/apparel"/>
    </bean>

    <!-- 1) Scan for files -->
    <file:inbound-channel-adapter id="batchFilesApparel" directory="#{baseDirectoryApparel}"
                                  filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
        <int:poller fixed-rate="1000"/>
    </file:inbound-channel-adapter>

    <!-- 2) move the file to processing and create header -->
    <file:outbound-gateway request-channel="batchFilesApparel"
                           reply-channel="batchFilesApparelProc"
                           directory="#{baseDirectoryApparel}/processing"
                           delete-source-files="true"/>
    <int:service-activator input-channel="batchFilesApparelProc"
                           output-channel="batchFilesHeaderInit"
                           ref="apparelHeaderSetupTask"
                           method="execute"/>

    <bean id="apparelHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
        <property name="catalog" value="apparelProductCatalog"/>
        <property name="net" value="false"/>
        <property name="storeBaseDirectory" ref="baseDirectoryApparel"/>
    </bean>

    <!-- Transformer converters mappings -->
    <bean id="batchApparelProductConverterMapping"
          class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
          p:mapping="grabin_product"
          p:converter-ref="batchApparelProductConverter"/>

    <!-- Apparel specific converters -->
    <bean id="batchApparelProductConverter"
          class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
        <property name="header">
            <value>#{defaultImpexProductHeader}
                # Insert Apparel Products
                INSERT_UPDATE
                Product;code[unique=true];name[lang=$lang];description[lang=$lang];ean;manufacturerName;$approved;$catalogVersion
            </value>
        </property>
        <property name="impexRow">
            <value>;a{+0};b{1};c{2};d{3};e{4};f{5};g{S}</value>
        </property>
        <property name="rowFilter">
            <bean class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexRowFilter">
                <property name="expression" value="row[1]"/>
            </bean>
        </property>
        <property name="type" value="ApparelProduct"/>
    </bean>

</beans>
